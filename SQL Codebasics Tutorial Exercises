SQL TUTORIAL CODEBASICS EXERCISES

------------------------------------------------------------------------------------------------

Exercise - Retrieve Data Using Text Query (SELECT, WHERE, DISTINCT, LIKE)
Write SQL queries for the following:

1. Print all movie titles and release year for all Marvel Studios movies.

SELECT title, release_year FROM moviesdb.movies 
WHERE studio="Marvel Studios"

2. Print all movies that have Avenger in their name.

SELECT * FROM moviesdb.movies 
WHERE title LIKE "%avenger%"

3. Print the year when the movie "The Godfather" was released.

SELECT release_year FROM moviesdb.movies 
WHERE title = "The Godfather"

4. Print all distinct movie studios in the Bollywood industry.

SELECT DISTINCT studio FROM moviesdb.movies 
WHERE industry = "Bollywood"

------------------------------------------------------------------------------------------------

Exercise - Retrieve Data Using Numeric Query (BETWEEN, IN, ORDER BY, LIMIT, OFFSET)
Write SQL queries for the following:

1. Print all movies in the order of their release year (latest first)

SELECT * FROM moviesdb.movies
ORDER BY release_year ASC

2. All movies released in the year 2022

SELECT * FROM moviesdb.movies
WHERE release_year = 2022

3. Now all the movies released after 2020

SELECT * FROM moviesdb.movies
WHERE release_year > 2020

4. All movies after the year 2020 that have more than 8 rating

SELECT * FROM moviesdb.movies
WHERE release_year > 2020 AND imdb_rating > 8

5. Select all movies that are by Marvel studios and Hombale Films

SELECT * FROM moviesdb.movies
WHERE studio in ("Marvel Studios", "Hombale Films")

6. Select all THOR movies by their release year

SELECT * FROM moviesdb.movies
WHERE title LIKE "%THOR%"
ORDER BY release_year ASC

7. Select all movies that are not from Marvel Studios

SELECT * FROM moviesdb.movies
WHERE studio != "Marvel Studios"

------------------------------------------------------------------------------------------------

Exercise - Summary analytics (MIN, MAX, AVG, GROUP BY)

1. How many movies were released between 2015 and 2022

SELECT COUNT(*) FROM moviesdb.movies
WHERE release_year BETWEEN 2015 AND 2022

2. Print the max and min movie release year

SELECT MAX(release_year) as max_year, 
	MIN(release_year) as min_year
FROM moviesdb.movies

3. Print a year and how many movies were released in that year starting with the latest year

SELECT release_year, COUNT(*) as cnt
FROM moviesdb.movies
GROUP BY release_year
ORDER BY cnt DESC

------------------------------------------------------------------------------------------------

Exercise - Calculated Columns (IF, CASE, YEAR, CURYEAR)
Write SQL queries for the following,

1. Print profit % for all the movies

SELECT (revenue-budget) as profit,
	(revenue-budget)*100/budget as profit_percent
 FROM moviesdb.financials;

------------------------------------------------------------------------------------------------

Exercise - SQL Joins (INNER, LEFT, RIGHT, FULL)
Write SQL queries for the following,

1. Show all the movies with their language names

SELECT m.title, l.name
FROM moviesdb.movies m
JOIN moviesdb.languages l
ON m.language_id = l.language_id

2. Show all Telugu movie names (assuming you don't know the language id for Telugu)

SELECT m.title, l.name
FROM moviesdb.movies m
JOIN moviesdb.languages l
ON m.language_id = l.language_id WHERE l.name = "Telugu"


3. Show the language and number of movies released in that language

SELECT l.name, COUNT(m.movie_id) as cnt_movies
	FROM moviesdb.languages l
	LEFT JOIN moviesdb.movies m 
    USING (language_id)
    GROUP BY language_id
    ORDER BY cnt_movies DESC

------------------------------------------------------------------------------------------------
